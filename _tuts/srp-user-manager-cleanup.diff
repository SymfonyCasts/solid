diff --git a/src/Manager/UserManager.php b/src/Manager/UserManager.php
index 93e29e0..17e27a2 100644
--- a/src/Manager/UserManager.php
+++ b/src/Manager/UserManager.php
@@ -4,25 +4,17 @@ namespace App\Manager;
 
 use App\Entity\User;
 use Doctrine\ORM\EntityManagerInterface;
-use Symfony\Bridge\Twig\Mime\TemplatedEmail;
-use Symfony\Component\Mailer\MailerInterface;
-use Symfony\Component\Routing\Generator\UrlGeneratorInterface;
-use Symfony\Component\Routing\RouterInterface;
 use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;
 
 class UserManager
 {
     private $passwordEncoder;
     private $entityManager;
-    private $router;
-    private $mailer;
 
-    public function __construct(UserPasswordEncoderInterface $passwordEncoder, EntityManagerInterface $entityManager, RouterInterface $router, MailerInterface $mailer)
+    public function __construct(UserPasswordEncoderInterface $passwordEncoder, EntityManagerInterface $entityManager)
     {
         $this->passwordEncoder = $passwordEncoder;
         $this->entityManager = $entityManager;
-        $this->router = $router;
-        $this->mailer = $mailer;
     }
 
     public function create(User $user, string $plainPassword): User
@@ -30,19 +22,6 @@ class UserManager
         $token = $this->createToken();
         $user->setConfirmationToken($token);
 
-        $confirmationLink = $this->router->generate('check_confirmation_link', [
-            'token' => $user->getConfirmationToken()
-        ], UrlGeneratorInterface::ABSOLUTE_URL);
-
-        $confirmationEmail = (new TemplatedEmail())
-            ->from('staff@example.com')
-            ->to($user->getEmail())
-            ->subject('Confirm your account')
-            ->htmlTemplate('emails/registration.html.twig')
-            ->context([
-                'confirmationLink' => $confirmationLink
-            ]);
-
         $user->setPassword(
             $this->passwordEncoder->encodePassword($user, $plainPassword)
         );
@@ -50,8 +29,6 @@ class UserManager
         $this->entityManager->persist($user);
         $this->entityManager->flush();
 
-        $this->mailer->send($confirmationEmail);
-
         return $user;
     }
 
