diff --git a/src/Controller/BigFootSightingController.php b/src/Controller/BigFootSightingController.php
index 880a59c..4bc4ded 100644
--- a/src/Controller/BigFootSightingController.php
+++ b/src/Controller/BigFootSightingController.php
@@ -5,6 +5,7 @@ namespace App\Controller;
 use App\Entity\BigFootSighting;
 use App\Form\BigfootSightingType;
 use App\Model\DebuggableBigFootSightingScore;
+use App\Service\DebuggableSightingScorer;
 use App\Service\SightingScorer;
 use Doctrine\ORM\EntityManagerInterface;
 use Sensio\Bundle\FrameworkExtraBundle\Configuration\IsGranted;
@@ -18,7 +19,7 @@ class BigFootSightingController extends AbstractController
      * @Route("/sighting/upload", name="app_sighting_upload")
      * @IsGranted("ROLE_USER")
      */
-    public function upload(Request $request, SightingScorer $sightingScorer, EntityManagerInterface $entityManager)
+    public function upload(Request $request, DebuggableSightingScorer $sightingScorer, EntityManagerInterface $entityManager)
     {
         $form = $this->createForm(BigFootSightingType::class);
         $form->handleRequest($request);
@@ -36,12 +37,10 @@ class BigFootSightingController extends AbstractController
 
             $this->addFlash('success', 'New BigFoot Sighting created successfully!');
 
-            if ($bfsScore instanceof DebuggableBigFootSightingScore) {
-                $this->addFlash('success', sprintf(
-                    'Btw, the scoring took %f milliseconds',
-                    $bfsScore->getCalculationTime() * 1000
-                ));
-            }
+            $this->addFlash('success', sprintf(
+                'Btw, the scoring took %f milliseconds',
+                $bfsScore->getCalculationTime() * 1000
+            ));
 
             return $this->redirectToRoute('app_sighting_show', [
                 'id' => $sighting->getId()
